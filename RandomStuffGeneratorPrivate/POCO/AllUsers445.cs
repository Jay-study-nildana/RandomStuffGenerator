using System;
using System.Collections.Generic;

using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using RandomStuffGeneratorPrivate.POCO;
//
//    var allUsers445 = AllUsers445.FromJson(jsonString);

namespace RandomStuffGeneratorPrivate.POCO
{
    public partial class AllUsers445
    {
        [JsonProperty("email")]
        public string Email { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("nickname")]
        public string Nickname { get; set; }

        [JsonProperty("user_id")]
        public string UserId { get; set; }
    }

    public partial class AllUsers445
    {
        public static List<AllUsers445> FromJson(string json) => JsonConvert.DeserializeObject<List<AllUsers445>>(json, RandomStuffGeneratorPrivate.POCO.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this List<AllUsers445> self) => JsonConvert.SerializeObject(self, RandomStuffGeneratorPrivate.POCO.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
